stages:
  - test
  - build
  - security

test_unitaire:
  stage: test
  script:
    - echo "Exécution des tests unitaires..."
    
build_docker:
  stage: build
  image: docker:latest 
  services:
    - docker:dind 
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker info
    - docker build -t webapp:latest .
  only:
    - main

sca_snyk:
  stage: security
  image: node:20-alpine
  variables:
    SNYK_TOKEN: $SNYK_TOKEN
  before_script:
    - apk add --no-cache ca-certificates 
    - npm install -g snyk
  script:
    - snyk config set insecure=false
    - snyk test --all-projects --json > snyk-report.json || echo "Vulnerabilities found but continuing pipeline"
  artifacts:
    paths:
      - snyk-report.json
  allow_failure: true

secrets_check:
  stage: security
  image: 
    name: zricethezav/gitleaks:latest
    entrypoint: [""] 
  script:
    - gitleaks detect --source=. --report-format=json --report-path=gitleaks-report.json
  artifacts:
    paths:
      - gitleaks-report.json
  allow_failure: true

dast_zap:
  stage: security
  image: ghcr.io/zaproxy/zaproxy:stable
  script:
    - mkdir -p zap
    - zap-baseline.py -t http://localhost:3000 -r zap/report.html || echo "ZAP scan échoué (localhost inaccessible dans GitLab CI)" > zap/report.html
  artifacts:
    paths:
      - zap/report.html
    reports:
      dast: zap/report.html
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH


scan_docker:
  stage: security
  image: 
    name: aquasec/trivy:latest
    entrypoint: [""] 
  script:
    - trivy image --format json --output trivy-report.json node:20-slim
  artifacts:
    paths:
      - trivy-report.json
  allow_failure: true
